# Generated by Django 3.1.7 on 2025-01-16 22:24

import dashboard.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DecisionMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('decision', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Microorganism',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PalletLocation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SensorLocation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shipment', models.CharField(default='', max_length=255)),
                ('license_plate', models.CharField(max_length=255)),
                ('driver', models.CharField(max_length=255)),
                ('origin', models.CharField(max_length=255)),
                ('destination', models.CharField(max_length=255)),
                ('departure_date', models.DateTimeField()),
                ('arrival_date', models.DateTimeField()),
                ('microorganism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to='dashboard.microorganism')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trips', to='dashboard.producttype')),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('device', models.CharField(max_length=255)),
                ('serial_number', models.CharField(max_length=50)),
                ('description', models.TextField()),
                ('tag', models.CharField(default='No Tag', max_length=255, null=True)),
                ('time_range', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('max_temperature', models.FloatField(blank=True, default=None, null=True)),
                ('min_temperature', models.FloatField(blank=True, default=None, null=True)),
                ('lpa_max_time', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('analysis', models.ImageField(blank=True, default=None, null=True, upload_to='sensor_analysis/')),
                ('approved', models.BooleanField(default=False)),
                ('total_records', models.PositiveIntegerField(default=0)),
                ('decision_messages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensors', to='dashboard.decisionmessage')),
                ('pallet_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensors', to='dashboard.palletlocation')),
                ('sensor_position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensors', to='dashboard.sensorlocation')),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sensors', to='dashboard.trip')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
                ('time', models.DateTimeField()),
                ('temperature', models.FloatField()),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='records', to='dashboard.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='Equation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('LPD_form', models.TextField(blank=True, default='', help_text='Ingrese la fórmula en formato LaTeX o texto.')),
                ('LPD_parameters', models.JSONField(blank=True, default=dict, help_text="Ingrese los parámetros como un diccionario, e.g., {'a': 2.5, 'b': 1.0}.")),
                ('b_form', models.TextField(blank=True, default='', help_text='Ingrese la fórmula en formato LaTeX o texto.')),
                ('b_parameters', models.JSONField(blank=True, default=dict, help_text="Ingrese los parámetros como un diccionario, e.g., {'a': 2.5, 'b': 1.0}.")),
                ('n_form', models.TextField(blank=True, default='', help_text='Ingrese la fórmula en formato LaTeX o texto.')),
                ('n_parameters', models.JSONField(blank=True, default=dict, help_text="Ingrese los parámetros como un diccionario, e.g., {'a': 2.5, 'b': 1.0}.")),
                ('Tc', models.JSONField(blank=True, default=dashboard.models.default_tc, help_text="Ingrese los parámetros como un diccionario, e.g., {'Tc': 4.0}.")),
                ('dtu', models.JSONField(blank=True, default=dashboard.models.default_dtu, help_text="Ingrese los parámetros como un diccionario, e.g., {'dtu':  1 / (24 * 60 * 60)}.")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('microorganism', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equations', to='dashboard.microorganism')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='equations', to='dashboard.producttype')),
            ],
        ),
    ]
